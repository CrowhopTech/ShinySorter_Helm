### content.yaml
# Contains the Content Server for the Shiny Sorter. This serves imported files and their thumbnails
# using an nginx pod and a specific config file.
###
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shinysorter-content
spec:
  replicas: 1
  selector:
    matchLabels:
      app: content
  template:
    metadata:
      labels:
        app: content
    spec:
      terminationGracePeriodSeconds: 5
      containers:
        - name: content
          image: "{{ .Values.contentServer.image }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
          - name: storagedir
            mountPath: /usr/share/nginx/html
            readOnly: true
          - name: nginx-conf
            mountPath: /etc/nginx/conf.d
      volumes:
      - name: storagedir
        persistentVolumeClaim:
          claimName: shinysorter-storagedir
      - name: nginx-conf
        configMap:
          name: {{ include "shinysorter.fullname" . }}-content-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "shinysorter.fullname" . }}-content
spec:
  ports:
    - protocol: TCP
      port: 80
  selector:
    app: content
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "shinysorter.fullname" . }}-content
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - path: /dev/content/?(.*)
        pathType: Prefix
        backend:
          service:
            name: {{ include "shinysorter.fullname" . }}-content
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "shinysorter.fullname" . }}-content-nginx-conf
data:
  default.conf: |
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;

      location /thumbs/ {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      location /dumps {
        deny all;
      }

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
    }